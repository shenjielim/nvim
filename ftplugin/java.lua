---- If you started neovim within `~/dev/xy/project-1` this would resolve to `project-1`
--local project_name = vim.fn.fnamemodify(vim.fn.getcwd(), ':p:h:t')
--print(os.getenv('UserProfile'))
--local home = os.getenv('UserProfile')
--local workspace_dir = home .. '/workspace/' .. project_name
----                                               ^^
----                                               string concattenation in Lua
--local jdtls_install = require('mason-registry')
--.get_package('jdtls')
--:get_install_path()
--local path = {}
--
--path.java_agent = jdtls_install .. '/lombok.jar'
--path.launcher_jar = vim.fn.glob(jdtls_install .. '/plugins/org.eclipse.equinox.launcher_*.jar')
---- See `:help vim.lsp.start_client` for an overview of the supported `config` options.
--local config = {
--    -- The command that starts the language server
--    -- See: https://github.com/eclipse/eclipse.jdt.ls#running-from-the-command-line
--    cmd = {
--
--        -- ðŸ’€
--        'java', -- or '/path/to/java17_or_newer/bin/java'
--        -- depends on if `java` is in your $PATH env variable and if it points to the right version.
--
--        '-Declipse.application=org.eclipse.jdt.ls.core.id1',
--        '-Dosgi.bundles.defaultStartLevel=4',
--        '-Declipse.product=org.eclipse.jdt.ls.core.product',
--        '-Dlog.protocol=true',
--        '-Dlog.level=ALL',
--        '-javaagent:' .. path.java_agent,
--        '-Xms1g',
--        '--add-modules=ALL-SYSTEM',
--        '--add-opens', 'java.base/java.util=ALL-UNNAMED',
--        '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
--
--        -- ðŸ’€
--        '-jar',path.launcher_jar,
--        -- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                       ^^^^^^^^^^^^^^
--        -- Must point to the                                                     Change this to
--        -- eclipse.jdt.ls installation                                           the actual version
--
--
--        -- ðŸ’€
--        '-configuration', home .. '/AppData/Local/nvim-data/mason/packages/jdtls/config_win',
--        -- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^        ^^^^^^
--        -- Must point to the                      Change to one of `linux`, `win` or `mac`
--        -- eclipse.jdt.ls installation            Depending on your system.
--
--
--        -- ðŸ’€
--        -- See `data directory configuration` section in the README
--        '-data', workspace_dir
--    },
--
--    -- ðŸ’€
--    -- This is the default if not provided, you can remove it. Or adjust as needed.
--    -- One dedicated LSP server & client will be started per unique root_dir
--    root_dir = require('jdtls.setup').find_root({'.git', 'mvnw', 'gradlew','pom.xml'}),
--
--
--}
---- This starts a new client & server,
---- or attaches to an existing client & server depending on the `root_dir`.
--require('jdtls').start_or_attach(config)
